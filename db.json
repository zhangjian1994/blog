{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/BlueLake/source/apple-touch-icon.png","path":"apple-touch-icon.png","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.eot","path":"iconfont/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.svg","path":"iconfont/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.ttf","path":"iconfont/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/iconfont/iconfont.woff","path":"iconfont/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/js/search.json.js","path":"js/search.json.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/img/bg.jpg","path":"img/bg.jpg","modified":0,"renderable":1},{"_id":"themes/BlueLake/source/img/1.jpg","path":"img/1.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/BlueLake/README.en.md","hash":"3b725d75768df76849c62878eb04635c2abd61aa","modified":1488970979986},{"_id":"themes/BlueLake/LICENSE","hash":"4c3927c82d0aa4fac5cdf945e07afe5e24335891","modified":1488970979984},{"_id":"themes/BlueLake/README.md","hash":"c3a430480ab2cf1b54284e4bab3e64e7283ff699","modified":1488970979987},{"_id":"themes/BlueLake/_config.yml","hash":"033fbf325aee83469863edacab5adfe3a65ef5a6","modified":1490025527338},{"_id":"themes/BlueLake/package.json","hash":"85bcd5e6174018729c071b745208c61efbe802df","modified":1488970980441},{"_id":"source/_posts/HTML的基础语法.md","hash":"680e72a3b7136be657479404a555ab09909b2fb3","modified":1489586072322},{"_id":"source/_posts/Markdown的认识与入门.md","hash":"a3c93a84a107bee3c567fe8454bcb47bc91f6faa","modified":1487484756198},{"_id":"source/_posts/hexo的入门.md","hash":"94904d05011e33c72587c6313a30a886f2db0cc6","modified":1490025245948},{"_id":"source/_posts/hexo-简单、快速、强大的node-js静态框架.md","hash":"099812fa121ea3fb1dedc1ea2d39b493468678b9","modified":1489926338935},{"_id":"source/about/index.md","hash":"16775b5ca894034e87c64dd77b2beb14ed770a35","modified":1490016447057},{"_id":"themes/BlueLake/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1488970979798},{"_id":"themes/BlueLake/.git/config","hash":"05165d804714e9c1a0e5d4a99a95a77f34d4fac6","modified":1488970979863},{"_id":"themes/BlueLake/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1488970973869},{"_id":"themes/BlueLake/.git/index","hash":"004554a12372451be8f759cf835011a63fb47b93","modified":1488970980639},{"_id":"themes/BlueLake/.git/packed-refs","hash":"84f80b409619262c82fea34ac5176aea70ef787d","modified":1488970979626},{"_id":"themes/BlueLake/languages/de-DE.yml","hash":"cab904a1bbf8d0a189f4132f383224ee8abcc2d5","modified":1488970979990},{"_id":"themes/BlueLake/languages/en.yml","hash":"17913588a78da9e0786ff81359fb74bb8f318f13","modified":1488970979990},{"_id":"themes/BlueLake/languages/es-ES.yml","hash":"0f0f120fe5abfd6e0431bbf6757947247c96c341","modified":1488970979991},{"_id":"themes/BlueLake/languages/fr-FR.yml","hash":"1439db20fb4f4490fab3daea52698479d3fe3f4c","modified":1488970979992},{"_id":"themes/BlueLake/languages/ko.yml","hash":"9e90f546b374cb00e0566f2703642a4129f68029","modified":1488970980033},{"_id":"themes/BlueLake/languages/zh-CN.yml","hash":"4f69ffded977be0153a8cbd84fb2a95f4da572db","modified":1488970980093},{"_id":"themes/BlueLake/languages/zh-TW.yml","hash":"7b97b232cb15cd476cdbf6efe7e904add553ce16","modified":1488970980097},{"_id":"themes/BlueLake/layout/archive.jade","hash":"bf6256702a4a30f19fb3a49dd4e1af1d3445cf71","modified":1488970980213},{"_id":"themes/BlueLake/layout/base.jade","hash":"aaf4922adaea4dd1ada9ec203083c10734feaa41","modified":1488970980251},{"_id":"themes/BlueLake/layout/category.jade","hash":"d1beec4b0741cd8a2cd058939fd50238a6a6068e","modified":1488970980306},{"_id":"themes/BlueLake/layout/index.jade","hash":"3fe1f0c5021ac696ed9846ecb1c75d285fa46708","modified":1488970980324},{"_id":"themes/BlueLake/layout/page.jade","hash":"80147e6148ad9ec65ac0a56a6f0d62dc1665c5b0","modified":1490016569816},{"_id":"themes/BlueLake/layout/post.jade","hash":"daec2b8c915a64d9904442cea91be9c6e04b3aba","modified":1488970980395},{"_id":"themes/BlueLake/layout/tag.jade","hash":"7e8fe70f3d4c6e03658c8b88bd93b6bf1f06e258","modified":1488970980440},{"_id":"themes/BlueLake/source/apple-touch-icon.png","hash":"b6770e575b2a7c0b809e9c845d537c6a7272d2dc","modified":1489839546275},{"_id":"themes/BlueLake/source/favicon.ico","hash":"038faf7822634e8a08ac73809ccd01bf9f9e5e88","modified":1489839436389},{"_id":"themes/BlueLake/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1488970973890},{"_id":"themes/BlueLake/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1488970973892},{"_id":"themes/BlueLake/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1488970973893},{"_id":"themes/BlueLake/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1488970973894},{"_id":"themes/BlueLake/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1488970973895},{"_id":"themes/BlueLake/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1488970973942},{"_id":"themes/BlueLake/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1488970973897},{"_id":"themes/BlueLake/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1488970973943},{"_id":"themes/BlueLake/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1488970973944},{"_id":"themes/BlueLake/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1488970973946},{"_id":"themes/BlueLake/.git/logs/HEAD","hash":"8d464c7da7d203887cb160475ebfa59712329fc2","modified":1488970979858},{"_id":"themes/BlueLake/layout/_partial/after_footer.jade","hash":"370519c70e95e00c89197986827f0f8281f8d7df","modified":1488970980122},{"_id":"themes/BlueLake/layout/_partial/comments.jade","hash":"d1b124aaaef36a90b49086d90741510cd583b566","modified":1488970980122},{"_id":"themes/BlueLake/layout/_partial/footer.jade","hash":"35d6d29b5bac9dbe6091118a8f27aacd510d94d1","modified":1489925000920},{"_id":"themes/BlueLake/layout/_partial/mathjax.jade","hash":"ac6e3a92bf18ab6bbd0e041b6796b295bae963ee","modified":1488970980164},{"_id":"themes/BlueLake/layout/_partial/helpers.jade","hash":"9e44f6d32f2449b4109c33118f8285fa2fc7b023","modified":1488970980163},{"_id":"themes/BlueLake/layout/_partial/mathjax2.jade","hash":"234a792e64ba208fa97d2f99772ece23056a53ec","modified":1488970980165},{"_id":"themes/BlueLake/layout/_partial/paginator.jade","hash":"03ad0c49ae6f8a999ae35b38d08e25775f51f52a","modified":1488970980165},{"_id":"themes/BlueLake/layout/_partial/post_nav.jade","hash":"b11d9e6000449838b17f508429f29ffb60f53096","modified":1488970980166},{"_id":"themes/BlueLake/layout/_partial/tag.jade","hash":"6145b483b271bba05ad1db7c039fe352a768215b","modified":1488970980167},{"_id":"themes/BlueLake/layout/_partial/totop.jade","hash":"c632919f04194dcf6e0e8ccc572554a859aa922b","modified":1488970980168},{"_id":"themes/BlueLake/layout/_widget/archive.jade","hash":"9beba53cedfe0fd9bd5c0ba0707784bfc6cc3017","modified":1488970980169},{"_id":"themes/BlueLake/layout/_widget/category.jade","hash":"f76015c742a8a4353dd374863947e83c48c6bd16","modified":1488970980170},{"_id":"themes/BlueLake/layout/_widget/links.jade","hash":"5e2c1d5b4d3323b7b0d5bfeb9a62e6d580b42c10","modified":1488970980183},{"_id":"themes/BlueLake/layout/_widget/recent_comments.jade","hash":"c12994a9076e9f428d960b14689a9c15fe15d93c","modified":1488970980185},{"_id":"themes/BlueLake/layout/_widget/recent_posts.jade","hash":"c6f778d5d2f13bacbd83a56a9e9faaeac0dda0ed","modified":1488970980186},{"_id":"themes/BlueLake/layout/_widget/search.jade","hash":"fa4ce51b7caa955aa3a0386bf819bf7edf022425","modified":1488970980187},{"_id":"themes/BlueLake/layout/_widget/tag.jade","hash":"c75308c2b72456cfb98cb80f280c66e58f171705","modified":1488970980200},{"_id":"themes/BlueLake/layout/_widget/weibo.jade","hash":"2c865c9d9c6e1b77754eccd72314e8d6f6aebdaf","modified":1489923327007},{"_id":"themes/BlueLake/source/css/highlight.styl","hash":"92b5c306f276f8ea6a134e303b1b63612d25ecfe","modified":1488970980516},{"_id":"themes/BlueLake/source/css/style.styl","hash":"16c3d5adee37155c45f64175baabfb98aa4490fe","modified":1490429106182},{"_id":"themes/BlueLake/source/iconfont/iconfont.eot","hash":"274e5d9126bd6bc195cfd0d6a62b0482cf61d698","modified":1488970980521},{"_id":"themes/BlueLake/source/iconfont/iconfont.svg","hash":"ed7141f7374cdb3f05a28fe818b7aa6b47baac37","modified":1488970980523},{"_id":"themes/BlueLake/source/iconfont/iconfont.ttf","hash":"abc2a26a153298a497b6eba314d93f0835cc4185","modified":1488970980545},{"_id":"themes/BlueLake/source/iconfont/iconfont.woff","hash":"77a78dbe06adc208cb0d3497f1ea2b9b66f44226","modified":1488970980548},{"_id":"themes/BlueLake/source/js/search.json.js","hash":"7ce826f7b678ff3c524fce8bbd480c188e50c7ee","modified":1488970980637},{"_id":"themes/BlueLake/source/js/totop.js","hash":"4827a35694b99eadb6dfee5281d2488a33614077","modified":1488970980638},{"_id":"themes/BlueLake/source/img/bg.jpg","hash":"920ea7ee177bb21f4569287578b6b10e2792d246","modified":1490428835743},{"_id":"themes/BlueLake/.git/objects/pack/pack-39287dd04c29f07e9118e1a1cda8632eba429ede.idx","hash":"c5bbd21f214f4c4d148359db8f799d00a2684d99","modified":1488970979066},{"_id":"themes/BlueLake/.git/refs/heads/master","hash":"6dc59af01dbd735fa849bd5085bcf668c08122a5","modified":1488970979800},{"_id":"themes/BlueLake/.git/logs/refs/heads/master","hash":"8d464c7da7d203887cb160475ebfa59712329fc2","modified":1488970979803},{"_id":"themes/BlueLake/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1488970979785},{"_id":"themes/BlueLake/.git/objects/pack/pack-39287dd04c29f07e9118e1a1cda8632eba429ede.pack","hash":"99807eec3a9373b75ddfa7ceed5d6808b9e1c816","modified":1488970979157},{"_id":"themes/BlueLake/.git/logs/refs/remotes/origin/HEAD","hash":"8d464c7da7d203887cb160475ebfa59712329fc2","modified":1488970979785},{"_id":"themes/BlueLake/source/img/1.jpg","hash":"d23d92484e98adcbea7266ebfdfef7fb3fc42ee0","modified":1488970980634},{"_id":"themes/BlueLake/source/img/4.jpg","hash":"920ea7ee177bb21f4569287578b6b10e2792d246","modified":1490428835743}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2017-03-20T13:24:12.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: 'about'\ndate: 2017-03-20 21:24:12\n---\n","updated":"2017-03-20T13:27:27.057Z","path":"about/index.html","comments":1,"layout":"page","_id":"cj0iajf1e0001x8i58k0pjxe5","content":"","excerpt":"","more":""}],"Post":[{"title":"HTML的基础语法","date":"2017-03-15T13:32:07.000Z","_content":"HTML(Hyper Text Mark-up Language超文本标记语言)：不是编程语言，而是一种描述性的标记语言，用于描述网页中内容的显示方式，比如文字以什么颜色、大小来显示等，这些都是利用Html标记来实现。\n# HTML的文档结构\n\t所有的网页文件，通过都是四对标记来构成文档的骨架，它们是：\n\t<html>  \n  \n      <head>  \n  \n           <title>  \n  \n                标题  \n  \n           </title>  \n  \n      </head>  \n  \n      <body>  \n  \n           正文  \n  \n      </body>  \n  \n</html>   \n\n# 小结\n\t<html>…</html>标识网页文件的开始与结束，所有的Html元素，都要放在这对标记中。\n\t<head>…</head>标识网页文件的头部信息，如标题、搜索引擎关键字等\n\t<title>…</title>标识网页文件的标题\n\t<body>…</body>标识网页文件的主体部分\n# 常见的HTML的标记语法\n\t1.单标记\n\t一．<标记名称>\n\t\t单一型，无属性值\n\t\t如：<br/>——表示换行符\n\t二．<标记名称属性=”属性值”>\n\t\t单一型，有属性值\n\t\t如：<hr width=”80%”/>\n\t2.双标记\n\t三．<标记名称>…</标记名称>\n\t\t没有属性值\n\t如：<title>…<title>\n\t\t 四．<标记名称属性=”属性值”>…</标记名称>\n\t\t有属性值\n\t如：<body bgcolor=”red”>…</body>\n# 注释\n\t格式：\n      <!—注释内容-->\n\tBody属性\n      <body bgcolor=”背景颜色” background=”背景图像” text=”文本颜色” link=”链接文本颜色” vlink=”访问过的文本颜色” alink=”激活的连接文本颜色” leftmargin=”左边界”>\n# <font>标记\n\t语法：<font color=”文本颜色” size=“字号”>文本</font>\n# 段落标记\n\t|  align   | Left   | 左对齐  |\n\t|          | Center | 居中    |\n\t|          | Right  | 右对齐  |\n# 总结\n\t以上就是我们在学习html中经常用到的语法，如果想更详细的了解html语法的话，请查看[HTML参考手册](http://www.jb51.net/w3school/tags/index.htm)。\n\t","source":"_posts/HTML的基础语法.md","raw":"---\ntitle: HTML的基础语法\ndate: 2017-03-15 21:32:07\ntags: HTML\n---\nHTML(Hyper Text Mark-up Language超文本标记语言)：不是编程语言，而是一种描述性的标记语言，用于描述网页中内容的显示方式，比如文字以什么颜色、大小来显示等，这些都是利用Html标记来实现。\n# HTML的文档结构\n\t所有的网页文件，通过都是四对标记来构成文档的骨架，它们是：\n\t<html>  \n  \n      <head>  \n  \n           <title>  \n  \n                标题  \n  \n           </title>  \n  \n      </head>  \n  \n      <body>  \n  \n           正文  \n  \n      </body>  \n  \n</html>   \n\n# 小结\n\t<html>…</html>标识网页文件的开始与结束，所有的Html元素，都要放在这对标记中。\n\t<head>…</head>标识网页文件的头部信息，如标题、搜索引擎关键字等\n\t<title>…</title>标识网页文件的标题\n\t<body>…</body>标识网页文件的主体部分\n# 常见的HTML的标记语法\n\t1.单标记\n\t一．<标记名称>\n\t\t单一型，无属性值\n\t\t如：<br/>——表示换行符\n\t二．<标记名称属性=”属性值”>\n\t\t单一型，有属性值\n\t\t如：<hr width=”80%”/>\n\t2.双标记\n\t三．<标记名称>…</标记名称>\n\t\t没有属性值\n\t如：<title>…<title>\n\t\t 四．<标记名称属性=”属性值”>…</标记名称>\n\t\t有属性值\n\t如：<body bgcolor=”red”>…</body>\n# 注释\n\t格式：\n      <!—注释内容-->\n\tBody属性\n      <body bgcolor=”背景颜色” background=”背景图像” text=”文本颜色” link=”链接文本颜色” vlink=”访问过的文本颜色” alink=”激活的连接文本颜色” leftmargin=”左边界”>\n# <font>标记\n\t语法：<font color=”文本颜色” size=“字号”>文本</font>\n# 段落标记\n\t|  align   | Left   | 左对齐  |\n\t|          | Center | 居中    |\n\t|          | Right  | 右对齐  |\n# 总结\n\t以上就是我们在学习html中经常用到的语法，如果想更详细的了解html语法的话，请查看[HTML参考手册](http://www.jb51.net/w3school/tags/index.htm)。\n\t","slug":"HTML的基础语法","published":1,"updated":"2017-03-15T13:54:32.322Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0iajf190000x8i58xqti1p9","content":"<p>HTML(Hyper Text Mark-up Language超文本标记语言)：不是编程语言，而是一种描述性的标记语言，用于描述网页中内容的显示方式，比如文字以什么颜色、大小来显示等，这些都是利用Html标记来实现。</p>\n<h1 id=\"HTML的文档结构\"><a href=\"#HTML的文档结构\" class=\"headerlink\" title=\"HTML的文档结构\"></a>HTML的文档结构</h1><pre><code>所有的网页文件，通过都是四对标记来构成文档的骨架，它们是：\n&lt;html&gt;  \n\n  &lt;head&gt;  \n\n       &lt;title&gt;  \n\n            标题  \n\n       &lt;/title&gt;  \n\n  &lt;/head&gt;  \n\n  &lt;body&gt;  \n\n       正文  \n\n  &lt;/body&gt;  \n</code></pre><p>   </p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><pre><code>&lt;html&gt;…&lt;/html&gt;标识网页文件的开始与结束，所有的Html元素，都要放在这对标记中。\n&lt;head&gt;…&lt;/head&gt;标识网页文件的头部信息，如标题、搜索引擎关键字等\n&lt;title&gt;…&lt;/title&gt;标识网页文件的标题\n&lt;body&gt;…&lt;/body&gt;标识网页文件的主体部分\n</code></pre><h1 id=\"常见的HTML的标记语法\"><a href=\"#常见的HTML的标记语法\" class=\"headerlink\" title=\"常见的HTML的标记语法\"></a>常见的HTML的标记语法</h1><pre><code>1.单标记\n一．&lt;标记名称&gt;\n    单一型，无属性值\n    如：&lt;br/&gt;——表示换行符\n二．&lt;标记名称属性=”属性值”&gt;\n    单一型，有属性值\n    如：&lt;hr width=”80%”/&gt;\n2.双标记\n三．&lt;标记名称&gt;…&lt;/标记名称&gt;\n    没有属性值\n如：&lt;title&gt;…&lt;title&gt;\n     四．&lt;标记名称属性=”属性值”&gt;…&lt;/标记名称&gt;\n    有属性值\n如：&lt;body bgcolor=”red”&gt;…&lt;/body&gt;\n</code></pre><h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><pre><code>格式：\n  &lt;!—注释内容--&gt;\nBody属性\n  &lt;body bgcolor=”背景颜色” background=”背景图像” text=”文本颜色” link=”链接文本颜色” vlink=”访问过的文本颜色” alink=”激活的连接文本颜色” leftmargin=”左边界”&gt;\n</code></pre><h1 id=\"标记\"><a href=\"#标记\" class=\"headerlink\" title=\"标记\"></a><font>标记</font></h1><pre><code>语法：&lt;font color=”文本颜色” size=“字号”&gt;文本&lt;/font&gt;\n</code></pre><h1 id=\"段落标记\"><a href=\"#段落标记\" class=\"headerlink\" title=\"段落标记\"></a>段落标记</h1><pre><code>|  align   | Left   | 左对齐  |\n|          | Center | 居中    |\n|          | Right  | 右对齐  |\n</code></pre><h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><pre><code>以上就是我们在学习html中经常用到的语法，如果想更详细的了解html语法的话，请查看[HTML参考手册](http://www.jb51.net/w3school/tags/index.htm)。\n</code></pre>","excerpt":"","more":"<p>HTML(Hyper Text Mark-up Language超文本标记语言)：不是编程语言，而是一种描述性的标记语言，用于描述网页中内容的显示方式，比如文字以什么颜色、大小来显示等，这些都是利用Html标记来实现。</p>\n<h1 id=\"HTML的文档结构\"><a href=\"#HTML的文档结构\" class=\"headerlink\" title=\"HTML的文档结构\"></a>HTML的文档结构</h1><pre><code>所有的网页文件，通过都是四对标记来构成文档的骨架，它们是：\n&lt;html&gt;  \n\n  &lt;head&gt;  \n\n       &lt;title&gt;  \n\n            标题  \n\n       &lt;/title&gt;  \n\n  &lt;/head&gt;  \n\n  &lt;body&gt;  \n\n       正文  \n\n  &lt;/body&gt;  \n</code></pre><p></html>   </p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><pre><code>&lt;html&gt;…&lt;/html&gt;标识网页文件的开始与结束，所有的Html元素，都要放在这对标记中。\n&lt;head&gt;…&lt;/head&gt;标识网页文件的头部信息，如标题、搜索引擎关键字等\n&lt;title&gt;…&lt;/title&gt;标识网页文件的标题\n&lt;body&gt;…&lt;/body&gt;标识网页文件的主体部分\n</code></pre><h1 id=\"常见的HTML的标记语法\"><a href=\"#常见的HTML的标记语法\" class=\"headerlink\" title=\"常见的HTML的标记语法\"></a>常见的HTML的标记语法</h1><pre><code>1.单标记\n一．&lt;标记名称&gt;\n    单一型，无属性值\n    如：&lt;br/&gt;——表示换行符\n二．&lt;标记名称属性=”属性值”&gt;\n    单一型，有属性值\n    如：&lt;hr width=”80%”/&gt;\n2.双标记\n三．&lt;标记名称&gt;…&lt;/标记名称&gt;\n    没有属性值\n如：&lt;title&gt;…&lt;title&gt;\n     四．&lt;标记名称属性=”属性值”&gt;…&lt;/标记名称&gt;\n    有属性值\n如：&lt;body bgcolor=”red”&gt;…&lt;/body&gt;\n</code></pre><h1 id=\"注释\"><a href=\"#注释\" class=\"headerlink\" title=\"注释\"></a>注释</h1><pre><code>格式：\n  &lt;!—注释内容--&gt;\nBody属性\n  &lt;body bgcolor=”背景颜色” background=”背景图像” text=”文本颜色” link=”链接文本颜色” vlink=”访问过的文本颜色” alink=”激活的连接文本颜色” leftmargin=”左边界”&gt;\n</code></pre><h1 id=\"标记\"><a href=\"#标记\" class=\"headerlink\" title=\"标记\"></a><font>标记</h1><pre><code>语法：&lt;font color=”文本颜色” size=“字号”&gt;文本&lt;/font&gt;\n</code></pre><h1 id=\"段落标记\"><a href=\"#段落标记\" class=\"headerlink\" title=\"段落标记\"></a>段落标记</h1><pre><code>|  align   | Left   | 左对齐  |\n|          | Center | 居中    |\n|          | Right  | 右对齐  |\n</code></pre><h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><pre><code>以上就是我们在学习html中经常用到的语法，如果想更详细的了解html语法的话，请查看[HTML参考手册](http://www.jb51.net/w3school/tags/index.htm)。\n</code></pre>"},{"title":"hexo--简单、快速、强大的node.js静态框架","date":"2017-03-15T13:57:48.000Z","_content":"hexo是一款基于Node.js的静态博客框架。目前在GitHub上已有1375 star 和 219 fork。\n![node](https://segmentfault.com/image?src=http://i.imgur.com/40XuB.png&objectId=1190000000370778&token=c44ffdd1cb839bc605d8386ea529233a)\n# 特性\n*风一般的速度\nHexo基于Node.js，支持多进程，几百篇文章也可以秒生成。\n*流畅的撰写\n支持GitHub Flavored Markdown和所有Octopress的插件。\n*扩展性\nHexo支持EJS、Swig和Stylus。通过插件支持Haml、Jade和Less.\n# 快速入门\n## 安装\n前提是必须先安装 Node.js，至于怎么安装自己 Google 吧\n\tnpm install hexo -g\n仅需一步就把 Hexo 本体和所有相依套件安装完毕，很简单吧？\n## 升级\n更新hexo到最新版\n\tnpm update hexo -g\n## 初始化\n\thexo init <folder>\n如果指定 <folder>，便会在目前的资料夹建立一个名为 <folder> 的新资料夹；否则会在目前资料夹初始化。\n## 创建新博客\n\thexo new \"Hello World\"\n## 生成网站\n\thexo generate\n## 服务器\n\thexo server\n伺服器会跑在 http://localhost:port （port 预设为 4000，可在 _config.yml 设定），也可以搭配 Pow 使用：\n\tcd ~/.pow\n\tln -s /path/to/myapp\n基本使用差不多就是这样子，非常简单。\n","source":"_posts/hexo-简单、快速、强大的node-js静态框架.md","raw":"---\ntitle: hexo--简单、快速、强大的node.js静态框架\ndate: 2017-03-15 21:57:48\ntags: hexo\n---\nhexo是一款基于Node.js的静态博客框架。目前在GitHub上已有1375 star 和 219 fork。\n![node](https://segmentfault.com/image?src=http://i.imgur.com/40XuB.png&objectId=1190000000370778&token=c44ffdd1cb839bc605d8386ea529233a)\n# 特性\n*风一般的速度\nHexo基于Node.js，支持多进程，几百篇文章也可以秒生成。\n*流畅的撰写\n支持GitHub Flavored Markdown和所有Octopress的插件。\n*扩展性\nHexo支持EJS、Swig和Stylus。通过插件支持Haml、Jade和Less.\n# 快速入门\n## 安装\n前提是必须先安装 Node.js，至于怎么安装自己 Google 吧\n\tnpm install hexo -g\n仅需一步就把 Hexo 本体和所有相依套件安装完毕，很简单吧？\n## 升级\n更新hexo到最新版\n\tnpm update hexo -g\n## 初始化\n\thexo init <folder>\n如果指定 <folder>，便会在目前的资料夹建立一个名为 <folder> 的新资料夹；否则会在目前资料夹初始化。\n## 创建新博客\n\thexo new \"Hello World\"\n## 生成网站\n\thexo generate\n## 服务器\n\thexo server\n伺服器会跑在 http://localhost:port （port 预设为 4000，可在 _config.yml 设定），也可以搭配 Pow 使用：\n\tcd ~/.pow\n\tln -s /path/to/myapp\n基本使用差不多就是这样子，非常简单。\n","slug":"hexo-简单、快速、强大的node-js静态框架","published":1,"updated":"2017-03-19T12:25:38.935Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0iajf1g0002x8i5unc7oc97","content":"<p>hexo是一款基于Node.js的静态博客框架。目前在GitHub上已有1375 star 和 219 fork。<br><img src=\"https://segmentfault.com/image?src=http://i.imgur.com/40XuB.png&amp;objectId=1190000000370778&amp;token=c44ffdd1cb839bc605d8386ea529233a\" alt=\"node\"></p>\n<h1 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h1><p><em>风一般的速度<br>Hexo基于Node.js，支持多进程，几百篇文章也可以秒生成。\n</em>流畅的撰写<br>支持GitHub Flavored Markdown和所有Octopress的插件。<br>*扩展性<br>Hexo支持EJS、Swig和Stylus。通过插件支持Haml、Jade和Less.</p>\n<h1 id=\"快速入门\"><a href=\"#快速入门\" class=\"headerlink\" title=\"快速入门\"></a>快速入门</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>前提是必须先安装 Node.js，至于怎么安装自己 Google 吧<br>    npm install hexo -g<br>仅需一步就把 Hexo 本体和所有相依套件安装完毕，很简单吧？</p>\n<h2 id=\"升级\"><a href=\"#升级\" class=\"headerlink\" title=\"升级\"></a>升级</h2><p>更新hexo到最新版<br>    npm update hexo -g</p>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><pre><code>hexo init &lt;folder&gt;\n</code></pre><p>如果指定 <folder>，便会在目前的资料夹建立一个名为 <folder> 的新资料夹；否则会在目前资料夹初始化。</folder></folder></p>\n<h2 id=\"创建新博客\"><a href=\"#创建新博客\" class=\"headerlink\" title=\"创建新博客\"></a>创建新博客</h2><pre><code>hexo new &quot;Hello World&quot;\n</code></pre><h2 id=\"生成网站\"><a href=\"#生成网站\" class=\"headerlink\" title=\"生成网站\"></a>生成网站</h2><pre><code>hexo generate\n</code></pre><h2 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h2><pre><code>hexo server\n</code></pre><p>伺服器会跑在 <a href=\"http://localhost:port\" target=\"_blank\" rel=\"external\">http://localhost:port</a> （port 预设为 4000，可在 _config.yml 设定），也可以搭配 Pow 使用：<br>    cd ~/.pow<br>    ln -s /path/to/myapp<br>基本使用差不多就是这样子，非常简单。</p>\n","excerpt":"","more":"<p>hexo是一款基于Node.js的静态博客框架。目前在GitHub上已有1375 star 和 219 fork。<br><img src=\"https://segmentfault.com/image?src=http://i.imgur.com/40XuB.png&amp;objectId=1190000000370778&amp;token=c44ffdd1cb839bc605d8386ea529233a\" alt=\"node\"></p>\n<h1 id=\"特性\"><a href=\"#特性\" class=\"headerlink\" title=\"特性\"></a>特性</h1><p><em>风一般的速度<br>Hexo基于Node.js，支持多进程，几百篇文章也可以秒生成。\n</em>流畅的撰写<br>支持GitHub Flavored Markdown和所有Octopress的插件。<br>*扩展性<br>Hexo支持EJS、Swig和Stylus。通过插件支持Haml、Jade和Less.</p>\n<h1 id=\"快速入门\"><a href=\"#快速入门\" class=\"headerlink\" title=\"快速入门\"></a>快速入门</h1><h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>前提是必须先安装 Node.js，至于怎么安装自己 Google 吧<br>    npm install hexo -g<br>仅需一步就把 Hexo 本体和所有相依套件安装完毕，很简单吧？</p>\n<h2 id=\"升级\"><a href=\"#升级\" class=\"headerlink\" title=\"升级\"></a>升级</h2><p>更新hexo到最新版<br>    npm update hexo -g</p>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><pre><code>hexo init &lt;folder&gt;\n</code></pre><p>如果指定 <folder>，便会在目前的资料夹建立一个名为 <folder> 的新资料夹；否则会在目前资料夹初始化。</p>\n<h2 id=\"创建新博客\"><a href=\"#创建新博客\" class=\"headerlink\" title=\"创建新博客\"></a>创建新博客</h2><pre><code>hexo new &quot;Hello World&quot;\n</code></pre><h2 id=\"生成网站\"><a href=\"#生成网站\" class=\"headerlink\" title=\"生成网站\"></a>生成网站</h2><pre><code>hexo generate\n</code></pre><h2 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h2><pre><code>hexo server\n</code></pre><p>伺服器会跑在 <a href=\"http://localhost:port\">http://localhost:port</a> （port 预设为 4000，可在 _config.yml 设定），也可以搭配 Pow 使用：<br>    cd ~/.pow<br>    ln -s /path/to/myapp<br>基本使用差不多就是这样子，非常简单。</p>\n"},{"title":"hexo的入门","date":"2017-03-20T15:14:43.000Z","_content":"## hexo的优点\n1.依赖少（仅依赖node），易于安装\n2.台湾人写的，不用担心对中文支持不好\n3.对程序员友好，要是愿意折腾还是有的折腾的\n基于以上原因，我最终选择了hexo作为维护博客的工具。\n\n##安装\n\n首先，我假设你的机器上已经安装了node。安装好node，就可以用强大的npm命令来安装其他东西。\n\n调出命令行，执行下面命令安装hexo：\nnpm install hexo -g\n\n安装完后就可以执行hexo命令，这个页面列出了所有的命令。\n\n作为入门者，不用上来就学会所有的命令。只在关键路径上，有几个命令需要掌握，下面逐个讲解：\n\thexo init 目录名\n例如\n\thexo init blog\n上面这条命令会新建一个名为blog的文件夹，然后在里面创建一大堆文件。\n![lizi](http://www.maintao.com/img/2014/hexo-beginner's-guide_hexo-init.jpg)\n完成后进入这个文件夹，以后就都要在这里捣鼓了。\n\n##写文章\n\n文章指的就是组成博客的一篇篇post，一般用md格式，除非你的md原稿找不到了，html格式也认。\n\n把写好的md文件放在source/_posts目录下，它将是你以后最常打交道的目录。该目录下的hello-world.md是一个文章的范例，打开它，看到下面内容：\n![lizi2](http://www.maintao.com/img/2014/hexo-beginner's-guide_hello-world.jpg)\n三条横线上面的部分是文章的元数据，见文知义没什么可说的。其中date还是要强调一下。因为经常要按时间排序、归档，所以hexo给每篇文章都打了一个时间戳。如果不显式指定时间，hexo默认会用md文件的创建时间。\n##运行网站\n\n在blog目录下，执行命令\n\thexo server\n用浏览器打开localhost:4000就可以看到你的博客网站了！\n![lizi3](http://www.maintao.com/img/2014/hexo-beginner's-guide_run-on-port-4000.jpg)\n##生成静态文件\n注意，你刚刚看到的页面并不是静态的。若要得到静态文件，还需执行一条命令：\n\thexo generate\n该命令会创建一个目录public，并在public下生成所有的静态文件。有了这些静态文件，只要有一个web server(例如Nginx)就可以独立运行网站了，完全没有其他依赖，这是WordPress和ghost无法比拟的。\n","source":"_posts/hexo的入门.md","raw":"---\ntitle: hexo的入门\ndate: 2017-03-20 23:14:43\ntags: hexo\n---\n## hexo的优点\n1.依赖少（仅依赖node），易于安装\n2.台湾人写的，不用担心对中文支持不好\n3.对程序员友好，要是愿意折腾还是有的折腾的\n基于以上原因，我最终选择了hexo作为维护博客的工具。\n\n##安装\n\n首先，我假设你的机器上已经安装了node。安装好node，就可以用强大的npm命令来安装其他东西。\n\n调出命令行，执行下面命令安装hexo：\nnpm install hexo -g\n\n安装完后就可以执行hexo命令，这个页面列出了所有的命令。\n\n作为入门者，不用上来就学会所有的命令。只在关键路径上，有几个命令需要掌握，下面逐个讲解：\n\thexo init 目录名\n例如\n\thexo init blog\n上面这条命令会新建一个名为blog的文件夹，然后在里面创建一大堆文件。\n![lizi](http://www.maintao.com/img/2014/hexo-beginner's-guide_hexo-init.jpg)\n完成后进入这个文件夹，以后就都要在这里捣鼓了。\n\n##写文章\n\n文章指的就是组成博客的一篇篇post，一般用md格式，除非你的md原稿找不到了，html格式也认。\n\n把写好的md文件放在source/_posts目录下，它将是你以后最常打交道的目录。该目录下的hello-world.md是一个文章的范例，打开它，看到下面内容：\n![lizi2](http://www.maintao.com/img/2014/hexo-beginner's-guide_hello-world.jpg)\n三条横线上面的部分是文章的元数据，见文知义没什么可说的。其中date还是要强调一下。因为经常要按时间排序、归档，所以hexo给每篇文章都打了一个时间戳。如果不显式指定时间，hexo默认会用md文件的创建时间。\n##运行网站\n\n在blog目录下，执行命令\n\thexo server\n用浏览器打开localhost:4000就可以看到你的博客网站了！\n![lizi3](http://www.maintao.com/img/2014/hexo-beginner's-guide_run-on-port-4000.jpg)\n##生成静态文件\n注意，你刚刚看到的页面并不是静态的。若要得到静态文件，还需执行一条命令：\n\thexo generate\n该命令会创建一个目录public，并在public下生成所有的静态文件。有了这些静态文件，只要有一个web server(例如Nginx)就可以独立运行网站了，完全没有其他依赖，这是WordPress和ghost无法比拟的。\n","slug":"hexo的入门","published":1,"updated":"2017-03-20T15:54:05.948Z","_id":"cj0iajf1n0004x8i57x16895r","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"hexo的优点\"><a href=\"#hexo的优点\" class=\"headerlink\" title=\"hexo的优点\"></a>hexo的优点</h2><p>1.依赖少（仅依赖node），易于安装<br>2.台湾人写的，不用担心对中文支持不好<br>3.对程序员友好，要是愿意折腾还是有的折腾的<br>基于以上原因，我最终选择了hexo作为维护博客的工具。</p>\n<p>##安装</p>\n<p>首先，我假设你的机器上已经安装了node。安装好node，就可以用强大的npm命令来安装其他东西。</p>\n<p>调出命令行，执行下面命令安装hexo：<br>npm install hexo -g</p>\n<p>安装完后就可以执行hexo命令，这个页面列出了所有的命令。</p>\n<p>作为入门者，不用上来就学会所有的命令。只在关键路径上，有几个命令需要掌握，下面逐个讲解：<br>    hexo init 目录名<br>例如<br>    hexo init blog<br>上面这条命令会新建一个名为blog的文件夹，然后在里面创建一大堆文件。<br><img src=\"http://www.maintao.com/img/2014/hexo-beginner&#39;s-guide_hexo-init.jpg\" alt=\"lizi\"><br>完成后进入这个文件夹，以后就都要在这里捣鼓了。</p>\n<p>##写文章</p>\n<p>文章指的就是组成博客的一篇篇post，一般用md格式，除非你的md原稿找不到了，html格式也认。</p>\n<p>把写好的md文件放在source/_posts目录下，它将是你以后最常打交道的目录。该目录下的hello-world.md是一个文章的范例，打开它，看到下面内容：<br><img src=\"http://www.maintao.com/img/2014/hexo-beginner&#39;s-guide_hello-world.jpg\" alt=\"lizi2\"><br>三条横线上面的部分是文章的元数据，见文知义没什么可说的。其中date还是要强调一下。因为经常要按时间排序、归档，所以hexo给每篇文章都打了一个时间戳。如果不显式指定时间，hexo默认会用md文件的创建时间。</p>\n<p>##运行网站</p>\n<p>在blog目录下，执行命令<br>    hexo server<br>用浏览器打开localhost:4000就可以看到你的博客网站了！<br><img src=\"http://www.maintao.com/img/2014/hexo-beginner&#39;s-guide_run-on-port-4000.jpg\" alt=\"lizi3\"></p>\n<p>##生成静态文件<br>注意，你刚刚看到的页面并不是静态的。若要得到静态文件，还需执行一条命令：<br>    hexo generate<br>该命令会创建一个目录public，并在public下生成所有的静态文件。有了这些静态文件，只要有一个web server(例如Nginx)就可以独立运行网站了，完全没有其他依赖，这是WordPress和ghost无法比拟的。</p>\n","excerpt":"","more":"<h2 id=\"hexo的优点\"><a href=\"#hexo的优点\" class=\"headerlink\" title=\"hexo的优点\"></a>hexo的优点</h2><p>1.依赖少（仅依赖node），易于安装<br>2.台湾人写的，不用担心对中文支持不好<br>3.对程序员友好，要是愿意折腾还是有的折腾的<br>基于以上原因，我最终选择了hexo作为维护博客的工具。</p>\n<p>##安装</p>\n<p>首先，我假设你的机器上已经安装了node。安装好node，就可以用强大的npm命令来安装其他东西。</p>\n<p>调出命令行，执行下面命令安装hexo：<br>npm install hexo -g</p>\n<p>安装完后就可以执行hexo命令，这个页面列出了所有的命令。</p>\n<p>作为入门者，不用上来就学会所有的命令。只在关键路径上，有几个命令需要掌握，下面逐个讲解：<br>    hexo init 目录名<br>例如<br>    hexo init blog<br>上面这条命令会新建一个名为blog的文件夹，然后在里面创建一大堆文件。<br><img src=\"http://www.maintao.com/img/2014/hexo-beginner&#39;s-guide_hexo-init.jpg\" alt=\"lizi\"><br>完成后进入这个文件夹，以后就都要在这里捣鼓了。</p>\n<p>##写文章</p>\n<p>文章指的就是组成博客的一篇篇post，一般用md格式，除非你的md原稿找不到了，html格式也认。</p>\n<p>把写好的md文件放在source/_posts目录下，它将是你以后最常打交道的目录。该目录下的hello-world.md是一个文章的范例，打开它，看到下面内容：<br><img src=\"http://www.maintao.com/img/2014/hexo-beginner&#39;s-guide_hello-world.jpg\" alt=\"lizi2\"><br>三条横线上面的部分是文章的元数据，见文知义没什么可说的。其中date还是要强调一下。因为经常要按时间排序、归档，所以hexo给每篇文章都打了一个时间戳。如果不显式指定时间，hexo默认会用md文件的创建时间。</p>\n<p>##运行网站</p>\n<p>在blog目录下，执行命令<br>    hexo server<br>用浏览器打开localhost:4000就可以看到你的博客网站了！<br><img src=\"http://www.maintao.com/img/2014/hexo-beginner&#39;s-guide_run-on-port-4000.jpg\" alt=\"lizi3\"></p>\n<p>##生成静态文件<br>注意，你刚刚看到的页面并不是静态的。若要得到静态文件，还需执行一条命令：<br>    hexo generate<br>该命令会创建一个目录public，并在public下生成所有的静态文件。有了这些静态文件，只要有一个web server(例如Nginx)就可以独立运行网站了，完全没有其他依赖，这是WordPress和ghost无法比拟的。</p>\n"},{"title":"Markdown的认识与入门","date":"2017-02-19T05:22:39.000Z","_content":"Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。\n# 认识Markdown\n在刚才的导语里提到，Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了。目前来看，支持 Markdown 语法的编辑器有很多，包括很多网站（例如简书）也支持了 Markdown 的文字录入。Markdown 从写作到完成，导出格式随心所欲，你可以导出 HTML 格式的文件用来网站发布，也可以十分方便的导出 PDF 格式，这种格式写出的简历更能得到 HR 的好感。甚至可以利用 CloudApp 这种云服务工具直接上传至网页用来分享你的文章，全球最大的轻博客平台 Tumblr，也支持使用 Mou 这类 Markdown 工具进行编辑并直接上传。\n## Markdown 官方文档\n这里可以看到官方的 Markdown 语法规则文档，当然，后文我也会用自己的方式，阐述这些语法在实际使用中的用法。\n[创始人 John Gruber 的 Markdown 语法说明](http://daringfireball.net/projects/markdown/syntax)\n[Markdown 中文版语法说明](http://wowubuntu.com/markdown/#list)\n### 使用 Markdown 的优点\n* 专注你的文字内容而不是排版样式。\n* 轻松的导出 HTML、PDF 和本身的 .md 文件。\n* 纯文本内容，兼容所有的文本编辑器与字处理软件。\n* 可读，直观。适合所有人的写作语言。\n![Mou icon](http://mouapp.com/Mou_128.png)\n# Markdown 语法的简要规则\n### 标题\n![1](http://cdn.sspai.com/attachment/thumbnail/2014/04/15/620e64aa6522f5eaeb788a8b5f1faa5c10f74_mw_800_wm_1_wmp_3.jpg)\n标题是每篇文章都需要也是最常用的格式，在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加 # 号即可。\n # 一级标题\n\n ## 二级标题\n\n ### 三级标题\n以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。\n### 列表\n熟悉 HTML 的同学肯定知道有序列表与无序列表的区别，在 Markdown 下，列表的显示只需要在文字前加上 - 或 * 即可变为无序列表，有序列表则直接在文字前加 1. 2. 3. 符号要和文字之间加上一个字符的空格。\n![2](http://cdn.sspai.com/attachment/thumbnail/2014/04/15/a72338b96cf4bfc1dacd610756786ae310f75_mw_800_wm_1_wmp_3.jpg)\n### 引用\n如果你需要引用一小段别处的句子，那么就要用引用的格式。\n\n > 例如这样\n\n只需要在文本前加入 > 这种尖括号（大于号）即可\n![3](http://cdn.sspai.com/attachment/thumbnail/2014/04/15/07bd8bf6fd38ea7d3bffdc3cae04f6f210f76_mw_800_wm_1_wmp_3.jpg)\n### 图片和链接\n插入链接与插入图片的语法很像，区别在一个 !号\n\n插入图片的地址需要图床，这里推荐 CloudApp 的服务，生成URL地址即可。\n![4](http://cdn.sspai.com/attachment/thumbnail/2014/04/15/f96c892fc63933ab186235f7c910753b10f77_mw_800_wm_1_wmp_3.jpg)\n### 粗体与斜体\nMarkdown 的粗体和斜体也非常简单，用两个 * 包含一段文本就是粗体的语法，用一个 * 包含一段文本就是斜体的语法。\n\n例如：**这里是粗体** *这里是斜体*\n","source":"_posts/Markdown的认识与入门.md","raw":"---\ntitle: Markdown的认识与入门\ndate: 2017-02-19 13:22:39\ntags: Markdown\n---\nMarkdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。\n# 认识Markdown\n在刚才的导语里提到，Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了。目前来看，支持 Markdown 语法的编辑器有很多，包括很多网站（例如简书）也支持了 Markdown 的文字录入。Markdown 从写作到完成，导出格式随心所欲，你可以导出 HTML 格式的文件用来网站发布，也可以十分方便的导出 PDF 格式，这种格式写出的简历更能得到 HR 的好感。甚至可以利用 CloudApp 这种云服务工具直接上传至网页用来分享你的文章，全球最大的轻博客平台 Tumblr，也支持使用 Mou 这类 Markdown 工具进行编辑并直接上传。\n## Markdown 官方文档\n这里可以看到官方的 Markdown 语法规则文档，当然，后文我也会用自己的方式，阐述这些语法在实际使用中的用法。\n[创始人 John Gruber 的 Markdown 语法说明](http://daringfireball.net/projects/markdown/syntax)\n[Markdown 中文版语法说明](http://wowubuntu.com/markdown/#list)\n### 使用 Markdown 的优点\n* 专注你的文字内容而不是排版样式。\n* 轻松的导出 HTML、PDF 和本身的 .md 文件。\n* 纯文本内容，兼容所有的文本编辑器与字处理软件。\n* 可读，直观。适合所有人的写作语言。\n![Mou icon](http://mouapp.com/Mou_128.png)\n# Markdown 语法的简要规则\n### 标题\n![1](http://cdn.sspai.com/attachment/thumbnail/2014/04/15/620e64aa6522f5eaeb788a8b5f1faa5c10f74_mw_800_wm_1_wmp_3.jpg)\n标题是每篇文章都需要也是最常用的格式，在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加 # 号即可。\n # 一级标题\n\n ## 二级标题\n\n ### 三级标题\n以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。\n### 列表\n熟悉 HTML 的同学肯定知道有序列表与无序列表的区别，在 Markdown 下，列表的显示只需要在文字前加上 - 或 * 即可变为无序列表，有序列表则直接在文字前加 1. 2. 3. 符号要和文字之间加上一个字符的空格。\n![2](http://cdn.sspai.com/attachment/thumbnail/2014/04/15/a72338b96cf4bfc1dacd610756786ae310f75_mw_800_wm_1_wmp_3.jpg)\n### 引用\n如果你需要引用一小段别处的句子，那么就要用引用的格式。\n\n > 例如这样\n\n只需要在文本前加入 > 这种尖括号（大于号）即可\n![3](http://cdn.sspai.com/attachment/thumbnail/2014/04/15/07bd8bf6fd38ea7d3bffdc3cae04f6f210f76_mw_800_wm_1_wmp_3.jpg)\n### 图片和链接\n插入链接与插入图片的语法很像，区别在一个 !号\n\n插入图片的地址需要图床，这里推荐 CloudApp 的服务，生成URL地址即可。\n![4](http://cdn.sspai.com/attachment/thumbnail/2014/04/15/f96c892fc63933ab186235f7c910753b10f77_mw_800_wm_1_wmp_3.jpg)\n### 粗体与斜体\nMarkdown 的粗体和斜体也非常简单，用两个 * 包含一段文本就是粗体的语法，用一个 * 包含一段文本就是斜体的语法。\n\n例如：**这里是粗体** *这里是斜体*\n","slug":"Markdown的认识与入门","published":1,"updated":"2017-02-19T06:12:36.198Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0iajf1r0005x8i5xv21kx69","content":"<p>Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。</p>\n<h1 id=\"认识Markdown\"><a href=\"#认识Markdown\" class=\"headerlink\" title=\"认识Markdown\"></a>认识Markdown</h1><p>在刚才的导语里提到，Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了。目前来看，支持 Markdown 语法的编辑器有很多，包括很多网站（例如简书）也支持了 Markdown 的文字录入。Markdown 从写作到完成，导出格式随心所欲，你可以导出 HTML 格式的文件用来网站发布，也可以十分方便的导出 PDF 格式，这种格式写出的简历更能得到 HR 的好感。甚至可以利用 CloudApp 这种云服务工具直接上传至网页用来分享你的文章，全球最大的轻博客平台 Tumblr，也支持使用 Mou 这类 Markdown 工具进行编辑并直接上传。</p>\n<h2 id=\"Markdown-官方文档\"><a href=\"#Markdown-官方文档\" class=\"headerlink\" title=\"Markdown 官方文档\"></a>Markdown 官方文档</h2><p>这里可以看到官方的 Markdown 语法规则文档，当然，后文我也会用自己的方式，阐述这些语法在实际使用中的用法。<br><a href=\"http://daringfireball.net/projects/markdown/syntax\" target=\"_blank\" rel=\"external\">创始人 John Gruber 的 Markdown 语法说明</a><br><a href=\"http://wowubuntu.com/markdown/#list\" target=\"_blank\" rel=\"external\">Markdown 中文版语法说明</a></p>\n<h3 id=\"使用-Markdown-的优点\"><a href=\"#使用-Markdown-的优点\" class=\"headerlink\" title=\"使用 Markdown 的优点\"></a>使用 Markdown 的优点</h3><ul>\n<li>专注你的文字内容而不是排版样式。</li>\n<li>轻松的导出 HTML、PDF 和本身的 .md 文件。</li>\n<li>纯文本内容，兼容所有的文本编辑器与字处理软件。</li>\n<li><p>可读，直观。适合所有人的写作语言。<br><img src=\"http://mouapp.com/Mou_128.png\" alt=\"Mou icon\"></p>\n<h1 id=\"Markdown-语法的简要规则\"><a href=\"#Markdown-语法的简要规则\" class=\"headerlink\" title=\"Markdown 语法的简要规则\"></a>Markdown 语法的简要规则</h1><h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><p><img src=\"http://cdn.sspai.com/attachment/thumbnail/2014/04/15/620e64aa6522f5eaeb788a8b5f1faa5c10f74_mw_800_wm_1_wmp_3.jpg\" alt=\"1\"><br>标题是每篇文章都需要也是最常用的格式，在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加 # 号即可。</p>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><p>以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。</p>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><p>熟悉 HTML 的同学肯定知道有序列表与无序列表的区别，在 Markdown 下，列表的显示只需要在文字前加上 - 或 * 即可变为无序列表，有序列表则直接在文字前加 1. 2. 3. 符号要和文字之间加上一个字符的空格。<br><img src=\"http://cdn.sspai.com/attachment/thumbnail/2014/04/15/a72338b96cf4bfc1dacd610756786ae310f75_mw_800_wm_1_wmp_3.jpg\" alt=\"2\"></p>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><p>如果你需要引用一小段别处的句子，那么就要用引用的格式。</p>\n<blockquote>\n<p>例如这样</p>\n</blockquote>\n</li>\n</ul>\n<p>只需要在文本前加入 &gt; 这种尖括号（大于号）即可<br><img src=\"http://cdn.sspai.com/attachment/thumbnail/2014/04/15/07bd8bf6fd38ea7d3bffdc3cae04f6f210f76_mw_800_wm_1_wmp_3.jpg\" alt=\"3\"></p>\n<h3 id=\"图片和链接\"><a href=\"#图片和链接\" class=\"headerlink\" title=\"图片和链接\"></a>图片和链接</h3><p>插入链接与插入图片的语法很像，区别在一个 !号</p>\n<p>插入图片的地址需要图床，这里推荐 CloudApp 的服务，生成URL地址即可。<br><img src=\"http://cdn.sspai.com/attachment/thumbnail/2014/04/15/f96c892fc63933ab186235f7c910753b10f77_mw_800_wm_1_wmp_3.jpg\" alt=\"4\"></p>\n<h3 id=\"粗体与斜体\"><a href=\"#粗体与斜体\" class=\"headerlink\" title=\"粗体与斜体\"></a>粗体与斜体</h3><p>Markdown 的粗体和斜体也非常简单，用两个 <em> 包含一段文本就是粗体的语法，用一个 </em> 包含一段文本就是斜体的语法。</p>\n<p>例如：<strong>这里是粗体</strong> <em>这里是斜体</em></p>\n","excerpt":"","more":"<p>Markdown 是一种轻量级的「标记语言」，它的优点很多，目前也被越来越多的写作爱好者，撰稿者广泛使用。看到这里请不要被「标记」、「语言」所迷惑，Markdown 的语法十分简单。常用的标记符号也不超过十个，这种相对于更为复杂的HTML 标记语言来说，Markdown 可谓是十分轻量的，学习成本也不需要太多，且一旦熟悉这种语法规则，会有一劳永逸的效果。</p>\n<h1 id=\"认识Markdown\"><a href=\"#认识Markdown\" class=\"headerlink\" title=\"认识Markdown\"></a>认识Markdown</h1><p>在刚才的导语里提到，Markdown 是一种用来写作的轻量级「标记语言」，它用简洁的语法代替排版，而不像一般我们用的字处理软件 Word 或 Pages 有大量的排版、字体设置。它使我们专心于码字，用「标记」语法，来代替常见的排版格式。例如此文从内容到格式，甚至插图，键盘就可以通通搞定了。目前来看，支持 Markdown 语法的编辑器有很多，包括很多网站（例如简书）也支持了 Markdown 的文字录入。Markdown 从写作到完成，导出格式随心所欲，你可以导出 HTML 格式的文件用来网站发布，也可以十分方便的导出 PDF 格式，这种格式写出的简历更能得到 HR 的好感。甚至可以利用 CloudApp 这种云服务工具直接上传至网页用来分享你的文章，全球最大的轻博客平台 Tumblr，也支持使用 Mou 这类 Markdown 工具进行编辑并直接上传。</p>\n<h2 id=\"Markdown-官方文档\"><a href=\"#Markdown-官方文档\" class=\"headerlink\" title=\"Markdown 官方文档\"></a>Markdown 官方文档</h2><p>这里可以看到官方的 Markdown 语法规则文档，当然，后文我也会用自己的方式，阐述这些语法在实际使用中的用法。<br><a href=\"http://daringfireball.net/projects/markdown/syntax\">创始人 John Gruber 的 Markdown 语法说明</a><br><a href=\"http://wowubuntu.com/markdown/#list\">Markdown 中文版语法说明</a></p>\n<h3 id=\"使用-Markdown-的优点\"><a href=\"#使用-Markdown-的优点\" class=\"headerlink\" title=\"使用 Markdown 的优点\"></a>使用 Markdown 的优点</h3><ul>\n<li>专注你的文字内容而不是排版样式。</li>\n<li>轻松的导出 HTML、PDF 和本身的 .md 文件。</li>\n<li>纯文本内容，兼容所有的文本编辑器与字处理软件。</li>\n<li><p>可读，直观。适合所有人的写作语言。<br><img src=\"http://mouapp.com/Mou_128.png\" alt=\"Mou icon\"></p>\n<h1 id=\"Markdown-语法的简要规则\"><a href=\"#Markdown-语法的简要规则\" class=\"headerlink\" title=\"Markdown 语法的简要规则\"></a>Markdown 语法的简要规则</h1><h3 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h3><p><img src=\"http://cdn.sspai.com/attachment/thumbnail/2014/04/15/620e64aa6522f5eaeb788a8b5f1faa5c10f74_mw_800_wm_1_wmp_3.jpg\" alt=\"1\"><br>标题是每篇文章都需要也是最常用的格式，在 Markdown 中，如果一段文字被定义为标题，只要在这段文字前加 # 号即可。</p>\n<h1 id=\"一级标题\"><a href=\"#一级标题\" class=\"headerlink\" title=\"一级标题\"></a>一级标题</h1><h2 id=\"二级标题\"><a href=\"#二级标题\" class=\"headerlink\" title=\"二级标题\"></a>二级标题</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><p>以此类推，总共六级标题，建议在井号后加一个空格，这是最标准的 Markdown 语法。</p>\n<h3 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h3><p>熟悉 HTML 的同学肯定知道有序列表与无序列表的区别，在 Markdown 下，列表的显示只需要在文字前加上 - 或 * 即可变为无序列表，有序列表则直接在文字前加 1. 2. 3. 符号要和文字之间加上一个字符的空格。<br><img src=\"http://cdn.sspai.com/attachment/thumbnail/2014/04/15/a72338b96cf4bfc1dacd610756786ae310f75_mw_800_wm_1_wmp_3.jpg\" alt=\"2\"></p>\n<h3 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h3><p>如果你需要引用一小段别处的句子，那么就要用引用的格式。</p>\n<blockquote>\n<p>例如这样</p>\n</blockquote>\n</li>\n</ul>\n<p>只需要在文本前加入 &gt; 这种尖括号（大于号）即可<br><img src=\"http://cdn.sspai.com/attachment/thumbnail/2014/04/15/07bd8bf6fd38ea7d3bffdc3cae04f6f210f76_mw_800_wm_1_wmp_3.jpg\" alt=\"3\"></p>\n<h3 id=\"图片和链接\"><a href=\"#图片和链接\" class=\"headerlink\" title=\"图片和链接\"></a>图片和链接</h3><p>插入链接与插入图片的语法很像，区别在一个 !号</p>\n<p>插入图片的地址需要图床，这里推荐 CloudApp 的服务，生成URL地址即可。<br><img src=\"http://cdn.sspai.com/attachment/thumbnail/2014/04/15/f96c892fc63933ab186235f7c910753b10f77_mw_800_wm_1_wmp_3.jpg\" alt=\"4\"></p>\n<h3 id=\"粗体与斜体\"><a href=\"#粗体与斜体\" class=\"headerlink\" title=\"粗体与斜体\"></a>粗体与斜体</h3><p>Markdown 的粗体和斜体也非常简单，用两个 <em> 包含一段文本就是粗体的语法，用一个 </em> 包含一段文本就是斜体的语法。</p>\n<p>例如：<strong>这里是粗体</strong> <em>这里是斜体</em></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj0iajf190000x8i58xqti1p9","tag_id":"cj0iajf1k0003x8i5rwy2z9t3","_id":"cj0iajf1u0007x8i5nna2d2yz"},{"post_id":"cj0iajf1g0002x8i5unc7oc97","tag_id":"cj0iajf1t0006x8i5k92lh5ql","_id":"cj0iajf1v0009x8i5lgguvoa8"},{"post_id":"cj0iajf1r0005x8i5xv21kx69","tag_id":"cj0iajf1v0008x8i5qb5ccxd4","_id":"cj0iajf1w000ax8i5hb9nsfs7"},{"post_id":"cj0iajf1n0004x8i57x16895r","tag_id":"cj0iajf1t0006x8i5k92lh5ql","_id":"cj0iak5yi000bx8i5mxnco9dp"}],"Tag":[{"name":"HTML","_id":"cj0iajf1k0003x8i5rwy2z9t3"},{"name":"hexo","_id":"cj0iajf1t0006x8i5k92lh5ql"},{"name":"Markdown","_id":"cj0iajf1v0008x8i5qb5ccxd4"}]}}